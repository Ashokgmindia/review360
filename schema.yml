openapi: 3.0.3
info:
  title: Review360 API
  version: 1.0.0
  description: API documentation for Review360
paths:
  /api/v1/academics/bulk-upload/teachers/:
    post:
      operationId: v1_academics_bulk_upload_teachers_create
      description: Upload teachers in bulk via Excel, CSV, or JSON file. Requires
        'academics.add_teacher' permission. Creates both User accounts with Teacher
        role and Teacher profile records.
      summary: Bulk upload teachers
      tags:
      - Academics
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Excel (.xlsx), CSV (.csv), or JSON (.json) file containing
                    teacher data
              required:
              - file
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadResponse'
          description: ''
        '400':
          description: No response body
        '403':
          description: No response body
        '500':
          description: No response body
  /api/v1/academics/classes/:
    get:
      operationId: v1_academics_classes_list
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: query
        name: academic_year
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Academics
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClassList'
          description: ''
    post:
      operationId: v1_academics_classes_create
      description: Create a new class with optional student file upload. Students
        can be imported via Excel, CSV, or JSON file.
      summary: Create a new class
      tags:
      - Academics
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Class name
                academic_year:
                  type: string
                  description: Academic year
                teacher:
                  type: integer
                  description: Teacher ID
                section:
                  type: string
                  description: Class section
                program:
                  type: string
                  description: Program name
                semester:
                  type: integer
                  description: Semester number
                room_number:
                  type: string
                  description: Room number
                max_students:
                  type: integer
                  description: Maximum number of students (optional)
                student_file:
                  type: string
                  format: binary
                  description: Excel (.xlsx), CSV (.csv), or JSON (.json) file containing
                    student data
              required:
              - name
              - academic_year
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
          description: ''
  /api/v1/academics/classes/{id}/:
    get:
      operationId: v1_academics_classes_retrieve
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Class.
        required: true
      tags:
      - Academics
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
          description: ''
    put:
      operationId: v1_academics_classes_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Class.
        required: true
      tags:
      - Academics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Class'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Class'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Class'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
          description: ''
    patch:
      operationId: v1_academics_classes_partial_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Class.
        required: true
      tags:
      - Academics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClass'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClass'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
          description: ''
    delete:
      operationId: v1_academics_classes_destroy
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Class.
        required: true
      tags:
      - Academics
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/academics/departments/:
    get:
      operationId: v1_academics_departments_list
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Academics
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepartmentList'
          description: ''
    post:
      operationId: v1_academics_departments_create
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      tags:
      - Academics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/v1/academics/departments/{id}/:
    get:
      operationId: v1_academics_departments_retrieve
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - Academics
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    put:
      operationId: v1_academics_departments_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - Academics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    patch:
      operationId: v1_academics_departments_partial_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - Academics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    delete:
      operationId: v1_academics_departments_destroy
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - Academics
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/academics/students/:
    get:
      operationId: v1_academics_students_list
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: query
        name: academic_year
        schema:
          type: string
      - in: query
        name: class_ref
        schema:
          type: integer
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Academics
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentList'
          description: ''
    post:
      operationId: v1_academics_students_create
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      tags:
      - Academics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/academics/students/{id}/:
    get:
      operationId: v1_academics_students_retrieve
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - Academics
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    put:
      operationId: v1_academics_students_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - Academics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    patch:
      operationId: v1_academics_students_partial_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - Academics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    delete:
      operationId: v1_academics_students_destroy
      description: |-
        Override destroy method to properly delete the associated User account
        when deleting a Student (if user exists).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this student.
        required: true
      tags:
      - Academics
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/academics/students/class/{class_id}/:
    get:
      operationId: v1_academics_students_class_retrieve
      description: Get all students in a specific class with their subjects and teacher
        information.
      parameters:
      - in: path
        name: class_id
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/academics/students/class/{class_id}/student/{student_id}/:
    get:
      operationId: v1_academics_students_class_student_retrieve
      description: Get a specific student from a particular class with their subjects
        and teacher information.
      parameters:
      - in: path
        name: class_id
        schema:
          type: string
        required: true
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/academics/students/class/{class_id}/student/{student_id}/subjects/:
    put:
      operationId: v1_academics_students_class_student_subjects_update
      description: Update subject assignments for a specific student in a particular
        class.
      parameters:
      - in: path
        name: class_id
        schema:
          type: string
        required: true
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
    patch:
      operationId: v1_academics_students_class_student_subjects_partial_update
      description: Update subject assignments for a specific student in a particular
        class.
      parameters:
      - in: path
        name: class_id
        schema:
          type: string
        required: true
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudent'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
  /api/v1/academics/teachers/:
    get:
      operationId: v1_academics_teachers_list
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_hod
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Academics
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeacherList'
          description: ''
    post:
      operationId: v1_academics_teachers_create
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      tags:
      - Academics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Teacher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Teacher'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
  /api/v1/academics/teachers/{id}/:
    get:
      operationId: v1_academics_teachers_retrieve
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this teacher.
        required: true
      tags:
      - Academics
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
    put:
      operationId: v1_academics_teachers_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this teacher.
        required: true
      tags:
      - Academics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Teacher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Teacher'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
    patch:
      operationId: v1_academics_teachers_partial_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this teacher.
        required: true
      tags:
      - Academics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeacher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeacher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeacher'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
    delete:
      operationId: v1_academics_teachers_destroy
      description: |-
        Override destroy method to properly delete the associated User account
        when deleting a Teacher.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this teacher.
        required: true
      tags:
      - Academics
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/compliance/archives/:
    get:
      operationId: v1_compliance_archives_list
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: table_name
        schema:
          type: string
      tags:
      - Compliance
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArchiveRecordList'
          description: ''
  /api/v1/compliance/archives/{id}/:
    get:
      operationId: v1_compliance_archives_retrieve
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this archive record.
        required: true
      tags:
      - Compliance
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveRecord'
          description: ''
  /api/v1/compliance/audit-logs/:
    get:
      operationId: v1_compliance_audit_logs_list
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: query
        name: action
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: table_name
        schema:
          type: string
      tags:
      - Compliance
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuditLogList'
          description: ''
  /api/v1/compliance/audit-logs/{id}/:
    get:
      operationId: v1_compliance_audit_logs_retrieve
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audit log.
        required: true
      tags:
      - Compliance
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: ''
  /api/v1/followup/sessions/:
    get:
      operationId: v1_followup_sessions_list
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: query
        name: academic_year
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - cancelled
          - completed
          - rescheduled
          - scheduled
        description: |-
          * `scheduled` - scheduled
          * `completed` - completed
          * `cancelled` - cancelled
          * `rescheduled` - rescheduled
      tags:
      - Followup
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFollowUpSessionList'
          description: ''
    post:
      operationId: v1_followup_sessions_create
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      tags:
      - Followup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowUpSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FollowUpSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FollowUpSession'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUpSession'
          description: ''
  /api/v1/followup/sessions/{id}/:
    get:
      operationId: v1_followup_sessions_retrieve
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this follow up session.
        required: true
      tags:
      - Followup
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUpSession'
          description: ''
    put:
      operationId: v1_followup_sessions_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this follow up session.
        required: true
      tags:
      - Followup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowUpSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FollowUpSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FollowUpSession'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUpSession'
          description: ''
    patch:
      operationId: v1_followup_sessions_partial_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this follow up session.
        required: true
      tags:
      - Followup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFollowUpSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFollowUpSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFollowUpSession'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUpSession'
          description: ''
    delete:
      operationId: v1_followup_sessions_destroy
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this follow up session.
        required: true
      tags:
      - Followup
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/iam/auth/login/:
    post:
      operationId: v1_iam_auth_login_create
      tags:
      - IAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTokenObtain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailTokenObtain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailTokenObtain'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTokenObtain'
          description: ''
  /api/v1/iam/auth/logout/:
    post:
      operationId: v1_iam_auth_logout_create
      tags:
      - IAM
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/iam/auth/otp-verify/:
    post:
      operationId: v1_iam_auth_otp_verify_create
      tags:
      - IAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OTPVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OTPVerify'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTPVerify'
          description: ''
  /api/v1/iam/auth/password-reset-confirm/:
    post:
      operationId: v1_iam_auth_password_reset_confirm_create
      tags:
      - IAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/v1/iam/auth/password-reset-request/:
    post:
      operationId: v1_iam_auth_password_reset_request_create
      tags:
      - IAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/v1/iam/colleges/:
    get:
      operationId: v1_iam_colleges_list
      parameters:
      - in: query
        name: code
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - IAM
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollegeList'
          description: ''
    post:
      operationId: v1_iam_colleges_create
      tags:
      - IAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/College'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/College'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/College'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/College'
          description: ''
  /api/v1/iam/colleges/{id}/:
    get:
      operationId: v1_iam_colleges_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this college.
        required: true
      tags:
      - IAM
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/College'
          description: ''
    put:
      operationId: v1_iam_colleges_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this college.
        required: true
      tags:
      - IAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/College'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/College'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/College'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/College'
          description: ''
    patch:
      operationId: v1_iam_colleges_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this college.
        required: true
      tags:
      - IAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollege'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollege'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollege'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/College'
          description: ''
    delete:
      operationId: v1_iam_colleges_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this college.
        required: true
      tags:
      - IAM
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/iam/me/:
    get:
      operationId: v1_iam_me_retrieve
      tags:
      - IAM
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
          description: ''
  /api/v1/iam/token/refresh/:
    post:
      operationId: v1_iam_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - IAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/iam/token/verify/:
    post:
      operationId: v1_iam_token_verify_create
      tags:
      - IAM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/v1/learning/subjects/:
    get:
      operationId: v1_learning_subjects_list
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Learning
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubjectList'
          description: ''
    post:
      operationId: v1_learning_subjects_create
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      tags:
      - Learning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subject'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
  /api/v1/learning/subjects/{id}/:
    get:
      operationId: v1_learning_subjects_retrieve
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subject.
        required: true
      tags:
      - Learning
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    put:
      operationId: v1_learning_subjects_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subject.
        required: true
      tags:
      - Learning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subject'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    patch:
      operationId: v1_learning_subjects_partial_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subject.
        required: true
      tags:
      - Learning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubject'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
    delete:
      operationId: v1_learning_subjects_destroy
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subject.
        required: true
      tags:
      - Learning
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/learning/topics/:
    get:
      operationId: v1_learning_topics_list
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: subject
        schema:
          type: integer
      tags:
      - Learning
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTopicList'
          description: ''
    post:
      operationId: v1_learning_topics_create
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      tags:
      - Learning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Topic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Topic'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
  /api/v1/learning/topics/{id}/:
    get:
      operationId: v1_learning_topics_retrieve
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic.
        required: true
      tags:
      - Learning
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
    put:
      operationId: v1_learning_topics_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic.
        required: true
      tags:
      - Learning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Topic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Topic'
        required: true
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
    patch:
      operationId: v1_learning_topics_partial_update
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic.
        required: true
      tags:
      - Learning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTopic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTopic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTopic'
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
    delete:
      operationId: v1_learning_topics_destroy
      description: |-
        Mixin to scope queryset to the current user's college when the user has
        the college_admin role. If the model has a "college" field, it filters
        by that field; otherwise, college admins see no data.
        Superadmins are allowed full access.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this topic.
        required: true
      tags:
      - Learning
      security:
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    ArchiveRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        college:
          type: integer
        table_name:
          type: string
          maxLength: 50
        original_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        archived_at:
          type: string
          format: date-time
          readOnly: true
        payload: {}
      required:
      - archived_at
      - college
      - id
      - original_id
      - payload
      - table_name
    AuditLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        college:
          type: integer
        table_name:
          type: string
          maxLength: 50
        record_id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        action:
          type: string
          maxLength: 20
        details:
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - action
      - college
      - created_at
      - id
      - record_id
      - table_name
    BulkUploadResponse:
      type: object
      properties:
        message:
          type: string
        success_count:
          type: integer
        error_count:
          type: integer
        errors:
          type: array
          items:
            type: string
      required:
      - error_count
      - errors
      - message
      - success_count
    Class:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        academic_year:
          type: string
          maxLength: 9
        is_active:
          type: boolean
        college:
          type: integer
          readOnly: true
        teacher:
          type: integer
          nullable: true
        section:
          type: string
          maxLength: 10
        program:
          type: string
          maxLength: 100
        semester:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        room_number:
          type: string
          maxLength: 20
        max_students:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        student_file:
          type: string
          writeOnly: true
          description: Excel, CSV, or JSON file containing student data
        metadata:
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - college
      - created_at
      - id
      - name
      - updated_at
    College:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        code:
          type: string
          maxLength: 20
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        postcode:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 100
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        contact_phone:
          type: string
          maxLength: 20
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
        admin:
          type: integer
          nullable: true
      required:
      - code
      - id
      - name
      - updated_at
    Department:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        code:
          type: string
          maxLength: 20
        hod:
          type: integer
          nullable: true
        college:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - code
      - college
      - created_at
      - id
      - name
      - updated_at
    EmailTokenObtain:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
        remember_me:
          type: boolean
          default: false
      required:
      - email
      - password
    FollowUpSession:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        college:
          type: integer
        student:
          type: integer
          nullable: true
        subject:
          type: integer
          nullable: true
        topic:
          type: integer
          nullable: true
        teacher:
          type: integer
          nullable: true
        student_name:
          type: string
          maxLength: 200
        subject_name:
          type: string
          maxLength: 255
        topic_name:
          type: string
          maxLength: 255
        teacher_name:
          type: string
          maxLength: 200
        session_datetime:
          type: string
          format: date-time
        location:
          type: string
          maxLength: 255
        objective:
          type: string
        status:
          $ref: '#/components/schemas/FollowUpSessionStatusEnum'
        google_calendar_event_id:
          type: string
          maxLength: 255
        academic_year:
          type: string
          maxLength: 9
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_year
      - college
      - created_at
      - id
      - session_datetime
      - student_name
    FollowUpSessionStatusEnum:
      enum:
      - scheduled
      - completed
      - cancelled
      - rescheduled
      type: string
      description: |-
        * `scheduled` - scheduled
        * `completed` - completed
        * `cancelled` - cancelled
        * `rescheduled` - rescheduled
    Me:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        role:
          type: string
        college:
          type: integer
          nullable: true
        colleges:
          type: array
          items:
            type: integer
      required:
      - college
      - colleges
      - email
      - id
      - role
    OTPVerify:
      type: object
      properties:
        email:
          type: string
          format: email
        otp:
          type: string
          maxLength: 6
      required:
      - email
      - otp
    PaginatedArchiveRecordList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ArchiveRecord'
    PaginatedAuditLogList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditLog'
    PaginatedClassList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Class'
    PaginatedCollegeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/College'
    PaginatedDepartmentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Department'
    PaginatedFollowUpSessionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FollowUpSession'
    PaginatedStudentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Student'
    PaginatedSubjectList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Subject'
    PaginatedTeacherList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Teacher'
    PaginatedTopicList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
    PasswordResetConfirm:
      type: object
      properties:
        email:
          type: string
          format: email
        otp:
          type: string
          maxLength: 6
        new_password:
          type: string
          writeOnly: true
      required:
      - email
      - new_password
      - otp
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PatchedClass:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        academic_year:
          type: string
          maxLength: 9
        is_active:
          type: boolean
        college:
          type: integer
          readOnly: true
        teacher:
          type: integer
          nullable: true
        section:
          type: string
          maxLength: 10
        program:
          type: string
          maxLength: 100
        semester:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        room_number:
          type: string
          maxLength: 20
        max_students:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        student_file:
          type: string
          writeOnly: true
          description: Excel, CSV, or JSON file containing student data
        metadata:
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCollege:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        code:
          type: string
          maxLength: 20
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 100
        postcode:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 100
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        contact_phone:
          type: string
          maxLength: 20
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
        admin:
          type: integer
          nullable: true
    PatchedDepartment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        code:
          type: string
          maxLength: 20
        hod:
          type: integer
          nullable: true
        college:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFollowUpSession:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        college:
          type: integer
        student:
          type: integer
          nullable: true
        subject:
          type: integer
          nullable: true
        topic:
          type: integer
          nullable: true
        teacher:
          type: integer
          nullable: true
        student_name:
          type: string
          maxLength: 200
        subject_name:
          type: string
          maxLength: 255
        topic_name:
          type: string
          maxLength: 255
        teacher_name:
          type: string
          maxLength: 200
        session_datetime:
          type: string
          format: date-time
        location:
          type: string
          maxLength: 255
        objective:
          type: string
        status:
          $ref: '#/components/schemas/FollowUpSessionStatusEnum'
        google_calendar_event_id:
          type: string
          maxLength: 255
        academic_year:
          type: string
          maxLength: 9
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStudent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          maxLength: 20
        birth_date:
          type: string
          format: date
          nullable: true
        blood_group:
          type: string
          maxLength: 5
        address:
          type: string
        profile_photo:
          type: string
          format: uri
          nullable: true
        class_ref:
          type: integer
          nullable: true
        academic_year:
          type: string
          nullable: true
          maxLength: 9
        college:
          type: integer
          nullable: true
        department:
          type: integer
          nullable: true
        student_number:
          type: string
          nullable: true
          maxLength: 30
        admission_date:
          type: string
          format: date
          nullable: true
        graduation_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/StudentStatusEnum'
        guardian_name:
          type: string
          maxLength: 100
        guardian_contact:
          type: string
          maxLength: 20
        is_active:
          type: boolean
        metadata:
          nullable: true
        subjects:
          type: string
          readOnly: true
        topics:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSubject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        code:
          type: string
          maxLength: 20
        description:
          type: string
        department:
          type: integer
        college:
          type: integer
        class_ref:
          type: integer
          nullable: true
        semester:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        credits:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_elective:
          type: boolean
        is_active:
          type: boolean
        syllabus_file:
          type: string
          format: uri
          nullable: true
        topics:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: Get topics for this subject.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedTeacher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          maxLength: 20
        gender:
          type: string
          maxLength: 10
        date_of_birth:
          type: string
          format: date
          nullable: true
        address:
          type: string
        profile_photo:
          type: string
          format: uri
          nullable: true
        employee_id:
          type: string
          maxLength: 50
        date_of_joining:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        designation:
          type: string
          maxLength: 100
        department:
          type: integer
          nullable: true
        role_type:
          type: string
          maxLength: 50
        is_hod:
          type: boolean
        reporting_to:
          type: integer
          nullable: true
        highest_qualification:
          type: string
          maxLength: 100
        specialization:
          type: string
          maxLength: 100
        experience_years:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          nullable: true
        subjects_handled:
          type: array
          items:
            type: integer
        subjects_handled_names:
          type: string
          readOnly: true
        research_publications:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        certifications:
          type: string
        resume:
          type: string
          format: uri
          nullable: true
        password:
          type: string
          writeOnly: true
          minLength: 8
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedTopic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        context:
          type: string
          description: Context or background information for the topic
        objectives:
          type: string
          description: Learning objectives for this topic
        status:
          allOf:
          - $ref: '#/components/schemas/TopicStatusEnum'
          description: |-
            Current status of the topic

            * `not_started` - Not Started
            * `in_progress` - In Progress
            * `validated` - Validated
        grade:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Grade for the topic (0-10 scale)
        comments_and_recommendations:
          type: string
          description: Comments and recommendations about the topic
        qns1_text:
          type: string
          description: Question 1 text
        qns1_checked:
          type: boolean
          description: Question 1 checkbox
        qns2_text:
          type: string
          description: Question 2 text
        qns2_checked:
          type: boolean
          description: Question 2 checkbox
        qns3_text:
          type: string
          description: Question 3 text
        qns3_checked:
          type: boolean
          description: Question 3 checkbox
        qns4_text:
          type: string
          description: Question 4 text
        qns4_checked:
          type: boolean
          description: Question 4 checkbox
        subject_id:
          type: integer
          writeOnly: true
        subject_name:
          type: string
          readOnly: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    Student:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          maxLength: 20
        birth_date:
          type: string
          format: date
          nullable: true
        blood_group:
          type: string
          maxLength: 5
        address:
          type: string
        profile_photo:
          type: string
          format: uri
          nullable: true
        class_ref:
          type: integer
          nullable: true
        academic_year:
          type: string
          nullable: true
          maxLength: 9
        college:
          type: integer
          nullable: true
        department:
          type: integer
          nullable: true
        student_number:
          type: string
          nullable: true
          maxLength: 30
        admission_date:
          type: string
          format: date
          nullable: true
        graduation_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/StudentStatusEnum'
        guardian_name:
          type: string
          maxLength: 100
        guardian_contact:
          type: string
          maxLength: 20
        is_active:
          type: boolean
        metadata:
          nullable: true
        subjects:
          type: string
          readOnly: true
        topics:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - first_name
      - id
      - last_name
      - subjects
      - topics
      - updated_at
    StudentStatusEnum:
      enum:
      - enrolled
      - graduated
      - dropped
      type: string
      description: |-
        * `enrolled` - Enrolled
        * `graduated` - Graduated
        * `dropped` - Dropped
    Subject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        code:
          type: string
          maxLength: 20
        description:
          type: string
        department:
          type: integer
        college:
          type: integer
        class_ref:
          type: integer
          nullable: true
        semester:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        credits:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_elective:
          type: boolean
        is_active:
          type: boolean
        syllabus_file:
          type: string
          format: uri
          nullable: true
        topics:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: Get topics for this subject.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - code
      - college
      - created_at
      - department
      - id
      - name
      - topics
      - updated_at
    Teacher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          maxLength: 20
        gender:
          type: string
          maxLength: 10
        date_of_birth:
          type: string
          format: date
          nullable: true
        address:
          type: string
        profile_photo:
          type: string
          format: uri
          nullable: true
        employee_id:
          type: string
          maxLength: 50
        date_of_joining:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        designation:
          type: string
          maxLength: 100
        department:
          type: integer
          nullable: true
        role_type:
          type: string
          maxLength: 50
        is_hod:
          type: boolean
        reporting_to:
          type: integer
          nullable: true
        highest_qualification:
          type: string
          maxLength: 100
        specialization:
          type: string
          maxLength: 100
        experience_years:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,1})?$
          nullable: true
        subjects_handled:
          type: array
          items:
            type: integer
        subjects_handled_names:
          type: string
          readOnly: true
        research_publications:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        certifications:
          type: string
        resume:
          type: string
          format: uri
          nullable: true
        password:
          type: string
          writeOnly: true
          minLength: 8
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - first_name
      - id
      - last_name
      - password
      - subjects_handled_names
      - updated_at
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        access_token:
          type: string
      required:
      - access_token
    Topic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        context:
          type: string
          description: Context or background information for the topic
        objectives:
          type: string
          description: Learning objectives for this topic
        status:
          allOf:
          - $ref: '#/components/schemas/TopicStatusEnum'
          description: |-
            Current status of the topic

            * `not_started` - Not Started
            * `in_progress` - In Progress
            * `validated` - Validated
        grade:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Grade for the topic (0-10 scale)
        comments_and_recommendations:
          type: string
          description: Comments and recommendations about the topic
        qns1_text:
          type: string
          description: Question 1 text
        qns1_checked:
          type: boolean
          description: Question 1 checkbox
        qns2_text:
          type: string
          description: Question 2 text
        qns2_checked:
          type: boolean
          description: Question 2 checkbox
        qns3_text:
          type: string
          description: Question 3 text
        qns3_checked:
          type: boolean
          description: Question 3 checkbox
        qns4_text:
          type: string
          description: Question 4 text
        qns4_checked:
          type: boolean
          description: Question 4 checkbox
        subject_id:
          type: integer
          writeOnly: true
        subject_name:
          type: string
          readOnly: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - subject_id
      - subject_name
      - updated_at
    TopicStatusEnum:
      enum:
      - not_started
      - in_progress
      - validated
      type: string
      description: |-
        * `not_started` - Not Started
        * `in_progress` - In Progress
        * `validated` - Validated
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
- url: /
  description: Current server
tags:
- name: IAM
  description: Identity and Access Management
- name: Academics
  description: Academic management including classes, students, teachers, and subjects
- name: Learning
  description: Learning activities and validations
- name: Followup
  description: Follow-up sessions and tracking
- name: Compliance
  description: Audit logs and compliance records
