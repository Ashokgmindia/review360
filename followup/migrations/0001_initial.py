# Generated by Django 5.2.6 on 2025-09-30 07:50

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '__first__'),
        ('iam', '__first__'),
        ('learning', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the location (e.g., 'Classroom A', 'Library', 'Online')", max_length=255)),
                ('description', models.TextField(blank=True, default='', help_text='Description of the location')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followup_locations', to='iam.college')),
            ],
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the objective', max_length=255)),
                ('description', models.TextField(help_text='Detailed description of the objective')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followup_objectives', to='iam.college')),
            ],
        ),
        migrations.CreateModel(
            name='FollowUpSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=200)),
                ('subject_name', models.CharField(blank=True, default='', max_length=255)),
                ('topic_name', models.CharField(blank=True, default='', max_length=255)),
                ('teacher_name', models.CharField(blank=True, default='', max_length=200)),
                ('location_name', models.CharField(blank=True, default='', max_length=255)),
                ('objective_title', models.CharField(blank=True, default='', max_length=255)),
                ('session_datetime', models.DateTimeField()),
                ('notes_for_student', models.TextField(blank=True, default='', help_text='Notes or instructions for the student')),
                ('status', models.CharField(choices=[('scheduled', 'scheduled'), ('completed', 'completed'), ('cancelled', 'cancelled'), ('rescheduled', 'rescheduled')], default='scheduled', max_length=20)),
                ('google_calendar_event_id', models.CharField(blank=True, default='', max_length=255)),
                ('add_to_google_calendar', models.BooleanField(default=False, help_text='Whether to add this session to Google Calendar')),
                ('invite_student', models.BooleanField(default=False, help_text='Whether to send email invitation to student')),
                ('automatic_reminder', models.BooleanField(default=False, help_text='Whether to send automatic reminder 24 hours in advance')),
                ('academic_year', models.CharField(blank=True, max_length=9, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_up_sessions', to='iam.college')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follow_up_sessions', to='academics.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follow_up_sessions', to='learning.subject')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follow_up_sessions', to='academics.teacher')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follow_up_sessions', to='learning.topic')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follow_up_sessions', to='followup.location')),
                ('objective', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follow_up_sessions', to='followup.objective')),
            ],
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['college', 'is_active'], name='followup_lo_college_c011a4_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['name'], name='followup_lo_name_78e0f9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together={('college', 'name')},
        ),
        migrations.AddIndex(
            model_name='objective',
            index=models.Index(fields=['college', 'is_active'], name='followup_ob_college_9b9aef_idx'),
        ),
        migrations.AddIndex(
            model_name='objective',
            index=models.Index(fields=['title'], name='followup_ob_title_2fa719_idx'),
        ),
        migrations.AddIndex(
            model_name='followupsession',
            index=models.Index(fields=['college', 'academic_year'], name='followup_fo_college_7c60ac_idx'),
        ),
        migrations.AddIndex(
            model_name='followupsession',
            index=models.Index(fields=['student', 'status'], name='followup_fo_student_783059_idx'),
        ),
        migrations.AddIndex(
            model_name='followupsession',
            index=models.Index(fields=['teacher', 'session_datetime'], name='followup_fo_teacher_202bdc_idx'),
        ),
        migrations.AddIndex(
            model_name='followupsession',
            index=models.Index(fields=['status'], name='followup_fo_status_f2b3ec_idx'),
        ),
    ]
